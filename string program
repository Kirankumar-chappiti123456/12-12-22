Write a C program to find length of a string with stringlen fun and without fun len:

#include <stdio.h>
int main()
{
    char str[]="i work at thunder";
    int i=0,C=0;
    for(i=0;str[i]!='\0';i++)
    {
        C++;
    }
     printf("%d ",C);
}


#include <stdio.h>
#include<string.h>

int main()
{
    char str[]="i work at thunder";
    int l=strlen(str);
    printf("%d",l);
}

#include <stdio.h>
void fun(char str[])
{
    
    int i=0,c=0;
    for(i=0;str[i]!='\0';i++)
    {
        c++;
    }
    
    
    
    
    #include <stdio.h>
#include<string.h>

int main()
{
    char k[20]="kiran kumar";
    char p[20]="yadav";
    strcat(k,p);
    printf("%s",k);

    return 0;
}

    
    
    
    
    
    
    string copy without and with the string copy function:
    
    
    #include <stdio.h>
int main()
{
    char k[]="kiran kumar";
    char k1[]="yadav";
    int i=0;
    for( i=0;k1[i]!='\0';i++)
    {
    k[i]=k1[i];
    }
    k[i]='\0';
    printf("%s\n",k);
    printf("%s\n",k1);
}




using function pointer:

#include <stdio.h>
void fun(char k[],char k1[])
{
    int i=0;
    for( i=0;k1[i]!='\0';i++)
    {
    k[i]=k1[i];
    }
    k[i]='\0';
    printf("%s\n",k);
    printf("%s\n",k1);
}
int main()
{
    char k[]="kiran kumar";
    char k1[]="yadav";
    void (*fptr)(char [],char []);
    fptr=fun;
    fptr(k,k1);
    
}
    
     printf("%d ",i);
}
int main()
{
    char str[]="i work at thunder";
    void (*fptr)(char [])=fun;
    fptr(str);
}

with string copy function:

#include <stdio.h>
#include<string.h>
void fun(char k[],char k1[])
{
    int i=0;
    for(i=0;k[i]!='\0';i++)
    {
    strcpy(k1,k);
    }
    printf("%s\n",k);
    printf("%s\n",k1);
}
int main()
{
    char k[]="yadav";
    char k1[]="kiran kumar";
    void (*fptr)(char [],char []);
    fptr=fun;
    fptr(k,k1);
    
}
concatenate:


#include <stdio.h>
#include<string.h>

int main()
{
    char k[20]="kiran";
    char p[20]="kumar";
    strcpy(k,p);
    printf("%s",k);
    printf("%s",p);
}





own concatenate:
#include <stdio.h>
int main()
{
    char k[50]="kiran kumar";
    char p[50]="yadav";
    int i=0,j=0;
    for(i=0;k[i]!='\0';i++);
    {
        for(j=0;p[j]!='\0';j++)
        {
            k[i]=p[j];
            i++;
        }
        
    }
    k[i]='\0';
    printf("%s",k);
}


string comapare function:

#include <stdio.h>
#include <string.h>
int main()
{
    char str[]="abc";
    char str1[]="abcd";
    char str2[]="abc";
    int val=strcmp(str,str2);
    printf("%d",val);
}


string compare own function :


#include <stdio.h>
#include <string.h>
int cmp(char str[],char str1[])
{
    int f=0,i=0;
    while(str[i]!='\0' && str1[i]!='\0')
    {
        if(str[i]!=str1[i])
        {
            f++;
            
        }
        i++; 
    }
    if(f==0)
    {
    return 0;
    }
    else {
    return 1;
    }
}
int main()
{
   char str[20]="kiran";
   char str1[20]="kumar";
    int c=cmp(str,str1);
    (c==0)?printf("strings are same"):printf("string are not same");
    
}


